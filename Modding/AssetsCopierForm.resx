<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="AssetsCopierForm.IconOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>